Configure upstream (original repo) for syncing:
git remote -v
git remote add upstream <RepoURL>
git remote -v


Sync your repo with upstream repo:
cd <RepoDir>
git fetch upstream
git checkout master
git merge upstream/master
git push origin master

change remote url:
git remote set-url origin <RepoURL>
git remote set-url upstream <RepoURL>

Cloning a remote:
git clone URL

Create a local branch:
git checkout -b <branch>  #Copies the current branch to a new branch.

Switch to a branch:
git checkout master

Merge a branch: (Delete and delete remotely after merging)
git merge <branch> -m "message" will merge with the current branch!

Delete a branch:
git branch -d <branch> 

Delete a branch remotely (usually one should do both this and the above):
git push origin --delete <branch> 

Update git branch locally (note the branch you're in):
git add * (after doing changes to the files)
git rm file_to_be_removed_from_branch
git commit -m "Commit message"

Send a local branch to your remote repo:
git push origin <branch>

Sync your remote repo with upstream (Pull request):
Pull requests can only be done via Github, I think

Get a remote branch:
git checkout --track origin/<branch>


priorty over your own files in merge:
nano .gitattributes
src/minimal.c merge=ours
git config --global merge-.ours.driver true #only needed once
git rm src/a.out
git checkout master
git merge upstream/master
